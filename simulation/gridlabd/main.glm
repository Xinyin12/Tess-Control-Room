// gridlabd/main.glm
//
// This model implements the TESS2 system
//

#version -ge 4.3.1

#if ${FILENAME $modelname} == main
#error ${modelname} cannot be loaded directly
#endif

//
// Main python module
//

module main;

//
// Auction
//

class auction
{
    int32 auction_id;
    object resource_id;
    int16 interval;
    char8 units;
    double price;
    double quantity;
    char8 marginal_type;
    double marginal_quantity;
    int16 marginal_rank;
    char32 marginal_order;
    double price_mean;
    double price_std;
    double price_floor;
    double price_ceiling;
    double quantity_mean;
    double quantity_std;
    double quantity_floor;
    double quantity_ceiling;
    on_init "python:main.auction_init";
    on_precommit "python:main.auction_precommit";
    on_postsync "python:main.auction_postsync";
}

//
// Agent
//

class agent
{
    object storage_auction;
    object constraint_auction;
    char32 resource_id;
}

//
// Device
//

class device
{
    char8 type;
    object source;
    object agent;
    double power_max[MW];
    double energy_max[MWh];
    double power_quantity[MW];
    double energy_quantity[MWh];
    double power_price[$/MWh];
    double energy_price[$/MW*h^2];
    char32 power_order;
    char32 energy_order;
    set {NONE=0, POWER=1, ENERGY=2} flexible;
    int16 interval;
    int32 constraint_auctionid;
    int32 storage_auctionid;
    double power_dispatch[MW];
    double energy_dispatch[MWh];
    on_init "python:main.device_init";
    on_precommit "python:main.device_precommit";
    //on_presync "python:main.device_presync";
    //on_sync "python:main.device_sync";
    on_commit "python:main.device_commit";
}

